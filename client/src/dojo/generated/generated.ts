/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Cable: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, cable_id: RecsType.Number, cable_name: RecsType.BigInt, length: RecsType.Number, status: RecsType.BigInt },
        {
          metadata: {
            name: "Cable",
            types: ["u32","u32","u32","felt252","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Communication: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, cable: { game_id: RecsType.Number, player_id: RecsType.Number, cable_id: RecsType.Number, cable_name: RecsType.BigInt, length: RecsType.Number, status: RecsType.BigInt }, communication_tower: { game_id: RecsType.Number, player_id: RecsType.Number, tower_id: RecsType.Number, tower_name: RecsType.BigInt, height: RecsType.Number, status: RecsType.BigInt }, satellite_dish: { game_id: RecsType.Number, player_id: RecsType.Number, dish_id: RecsType.Number, dish_name: RecsType.BigInt, diameter: RecsType.Number, status: RecsType.BigInt }, relay_station: { game_id: RecsType.Number, player_id: RecsType.Number, station_id: RecsType.Number, station_name: RecsType.BigInt, capacity: RecsType.Number, status: RecsType.BigInt }, control_center: { game_id: RecsType.Number, player_id: RecsType.Number, center_id: RecsType.Number, center_name: RecsType.BigInt, location: RecsType.BigInt, status: RecsType.BigInt } },
        {
          metadata: {
            name: "Communication",
            types: ["u32","u32","u32","u32","u32","felt252","u32","felt252","u32","u32","u32","felt252","u32","felt252","u32","u32","u32","felt252","u32","felt252","u32","u32","u32","felt252","u32","felt252","u32","u32","u32","felt252","felt252","felt252"],
            customTypes: ["Cable","CommunicationTower","SatelliteDish","RelayStation","ControlCenter"],
          },
        }
      );
    })(),
    CommunicationTower: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, tower_id: RecsType.Number, tower_name: RecsType.BigInt, height: RecsType.Number, status: RecsType.BigInt },
        {
          metadata: {
            name: "CommunicationTower",
            types: ["u32","u32","u32","felt252","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    ControlCenter: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, center_id: RecsType.Number, center_name: RecsType.BigInt, location: RecsType.BigInt, status: RecsType.BigInt },
        {
          metadata: {
            name: "ControlCenter",
            types: ["u32","u32","u32","felt252","felt252","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    RelayStation: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, station_id: RecsType.Number, station_name: RecsType.BigInt, capacity: RecsType.Number, status: RecsType.BigInt },
        {
          metadata: {
            name: "RelayStation",
            types: ["u32","u32","u32","felt252","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    SatelliteDish: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, dish_id: RecsType.Number, dish_name: RecsType.BigInt, diameter: RecsType.Number, status: RecsType.BigInt },
        {
          metadata: {
            name: "SatelliteDish",
            types: ["u32","u32","u32","felt252","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Airport: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, airport_id: RecsType.Number, airport_name: RecsType.BigInt },
        {
          metadata: {
            name: "Airport",
            types: ["u32","u32","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Depot: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, depot_id: RecsType.Number, depot_name: RecsType.BigInt },
        {
          metadata: {
            name: "Depot",
            types: ["u32","u32","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    RailwayStation: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, station_id: RecsType.Number, station_name: RecsType.BigInt },
        {
          metadata: {
            name: "RailwayStation",
            types: ["u32","u32","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Seaport: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, seaport_id: RecsType.Number, seaport_name: RecsType.BigInt },
        {
          metadata: {
            name: "Seaport",
            types: ["u32","u32","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Transportation: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, airport: { game_id: RecsType.Number, player_id: RecsType.Number, airport_id: RecsType.Number, airport_name: RecsType.BigInt }, seaport: { game_id: RecsType.Number, player_id: RecsType.Number, seaport_id: RecsType.Number, seaport_name: RecsType.BigInt }, railway_station: { game_id: RecsType.Number, player_id: RecsType.Number, station_id: RecsType.Number, station_name: RecsType.BigInt }, depot: { game_id: RecsType.Number, player_id: RecsType.Number, depot_id: RecsType.Number, depot_name: RecsType.BigInt } },
        {
          metadata: {
            name: "Transportation",
            types: ["u32","u32","u32","u32","u32","felt252","u32","u32","u32","felt252","u32","u32","u32","felt252","u32","u32","u32","felt252"],
            customTypes: ["Airport","Seaport","RailwayStation","Depot"],
          },
        }
      );
    })(),
    MilitaryPosition: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, battlefield_id: RecsType.Number, faction: RecsType.BigInt, name: RecsType.BigInt, location: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number }, control_level: RecsType.Number },
        {
          metadata: {
            name: "MilitaryPosition",
            types: ["u32","contractaddress","u32","contractaddress","felt252","u32","u32","u32","u8"],
            customTypes: ["Vec3"],
          },
        }
      );
    })(),
    MilitaryUnits: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, position_id: RecsType.Number, infantry: RecsType.Number, special_forces: RecsType.Number, drones: RecsType.Number },
        {
          metadata: {
            name: "MilitaryUnits",
            types: ["u32","contractaddress","u32","u16","u16","u16"],
            customTypes: [],
          },
        }
      );
    })(),
    Scoreboard: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, player_count: RecsType.Number, top_score: RecsType.Number, last_updated: RecsType.BigInt },
        {
          metadata: {
            name: "Scoreboard",
            types: ["u32","contractaddress","u8","u32","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    UrbanBattlefield: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, name: RecsType.Number, size: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number }, weather: RecsType.Number },
        {
          metadata: {
            name: "UrbanBattlefield",
            types: ["u32","contractaddress","enum","u32","u32","u32","enum"],
            customTypes: ["BattlefieldName","Vec3","WeatherCondition"],
          },
        }
      );
    })(),
    WeatherEffect: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, battlefield_id: RecsType.Number, visibility: RecsType.Number, movement_penalty: RecsType.Number, comms_interference: RecsType.Number },
        {
          metadata: {
            name: "WeatherEffect",
            types: ["u32","contractaddress","u32","u8","u8","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, next_to_move: RecsType.BigInt, minimum_moves: RecsType.Number, over: RecsType.Boolean, player_count: RecsType.Number, nonce: RecsType.Number, price: RecsType.BigInt, clock: RecsType.BigInt, penalty: RecsType.BigInt, limit: RecsType.Number, winner: RecsType.BigInt, arena: RecsType.BigInt, seed: RecsType.BigInt },
        {
          metadata: {
            name: "Game",
            types: ["u32","contractaddress","u8","bool","u8","u32","u256","u64","u64","u32","contractaddress","contractaddress","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Player: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, index: RecsType.Number, address: RecsType.BigInt, name: RecsType.BigInt, supply: { infantry: RecsType.Number, armored: RecsType.Number, air: RecsType.Number, naval: RecsType.Number, cyber: RecsType.Number }, last_action: RecsType.BigInt, rank: RecsType.Number, player_score: { score: RecsType.Number, kills: RecsType.Number, deaths: RecsType.Number, assists: RecsType.Number } },
        {
          metadata: {
            name: "Player",
            types: ["u32","u32","contractaddress","felt252","u32","u32","u32","u32","u32","u64","u8","u32","u16","u16","u16"],
            customTypes: ["UnitsSupply","PlayerScore"],
          },
        }
      );
    })(),
    Position: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number } },
        {
          metadata: {
            name: "Position",
            types: ["contractaddress","u32","u32","u32"],
            customTypes: ["Vec3"],
          },
        }
      );
    })(),
    Amored: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, accuracy: RecsType.Number, firepower: RecsType.Number, range: RecsType.BigInt, accessories: { game_id: RecsType.Number, player_id: RecsType.BigInt, fuel: RecsType.Number, ammunition: RecsType.Number }, Amored_health: { game_id: RecsType.Number, player_id: RecsType.BigInt, shield_strength: RecsType.Number }, position: { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number } }, battlefield_name: RecsType.Number },
        {
          metadata: {
            name: "Amored",
            types: ["u32","contractaddress","u8","u32","u64","u32","contractaddress","u32","u32","u32","contractaddress","u32","contractaddress","u32","u32","u32","enum"],
            customTypes: ["AmoredAccessories","AmoredHealth","Position","Vec3","BattlefieldName"],
          },
        }
      );
    })(),
    AmoredAccessories: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, fuel: RecsType.Number, ammunition: RecsType.Number },
        {
          metadata: {
            name: "AmoredAccessories",
            types: ["u32","contractaddress","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    AmoredHealth: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.BigInt, shield_strength: RecsType.Number },
        {
          metadata: {
            name: "AmoredHealth",
            types: ["u32","contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Infantry: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, range: RecsType.BigInt, firepower: RecsType.Number, accuracy: RecsType.Number, accessories: { game_id: RecsType.Number, player_id: RecsType.Number, ammunition: RecsType.Number, first_aid_kit: RecsType.Number, molotov: RecsType.Number, grenade: RecsType.Number }, health: { game_id: RecsType.Number, player_id: RecsType.Number, shield_strength: RecsType.Number }, position: { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number } }, battlefield_name: RecsType.Number },
        {
          metadata: {
            name: "Infantry",
            types: ["u32","u32","u64","u32","u8","u32","u32","u32","u32","u32","u32","u32","u32","u32","contractaddress","u32","u32","u32","enum"],
            customTypes: ["InfantryAccessories","InfantryHealth","Position","Vec3","BattlefieldName"],
          },
        }
      );
    })(),
    InfantryAccessories: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, ammunition: RecsType.Number, first_aid_kit: RecsType.Number, molotov: RecsType.Number, grenade: RecsType.Number },
        {
          metadata: {
            name: "InfantryAccessories",
            types: ["u32","u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    InfantryHealth: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, shield_strength: RecsType.Number },
        {
          metadata: {
            name: "InfantryHealth",
            types: ["u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Ship: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player: RecsType.BigInt, range: RecsType.BigInt, firepower: RecsType.Number, accuracy: RecsType.Number, ship_accessories: { game_id: RecsType.Number, player_id: RecsType.Number, fuel: RecsType.Number, ammunition: RecsType.Number }, ship_health: { game_id: RecsType.Number, player_id: RecsType.Number, hull_integrity: RecsType.Number, shield_strength: RecsType.Number }, position: { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number, z: RecsType.Number } }, battlefield_name: RecsType.Number },
        {
          metadata: {
            name: "Ship",
            types: ["u32","contractaddress","u64","u32","u8","u32","u32","u32","u32","u32","u32","u32","u32","contractaddress","u32","u32","u32","enum"],
            customTypes: ["ShipAccessories","ShipHealth","Position","Vec3","BattlefieldName"],
          },
        }
      );
    })(),
    ShipAccessories: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, fuel: RecsType.Number, ammunition: RecsType.Number },
        {
          metadata: {
            name: "ShipAccessories",
            types: ["u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    ShipHealth: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.Number, player_id: RecsType.Number, hull_integrity: RecsType.Number, shield_strength: RecsType.Number },
        {
          metadata: {
            name: "ShipHealth",
            types: ["u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
